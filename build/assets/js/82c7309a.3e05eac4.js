"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[224],{6927:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"BISIMEYER Introduction","href":"/BISIMEYER/docs/IntroductionBISIM","docId":"IntroductionBISIM","unlisted":false},{"type":"category","label":"BISMEYER Overview","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/BISIMEYER/docs/BISIMEYER Overview/introduction","docId":"BISIMEYER Overview/introduction","unlisted":false},{"type":"link","label":"Equipment Requirements","href":"/BISIMEYER/docs/BISIMEYER Overview/Equipment-requirements","docId":"BISIMEYER Overview/Equipment-requirements","unlisted":false},{"type":"link","label":"Small Electronics","href":"/BISIMEYER/docs/BISIMEYER Overview/small_electronics","docId":"BISIMEYER Overview/small_electronics","unlisted":false},{"type":"link","label":"Software","href":"/BISIMEYER/docs/BISIMEYER Overview/Software","docId":"BISIMEYER Overview/Software","unlisted":false}],"href":"/BISIMEYER/docs/category/bismeyer-overview"},{"type":"category","label":"Setup and Building of Simulator","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Computer Setup","href":"/BISIMEYER/docs/Setup_and_Building_of_Simulator/Computer_Setup","docId":"Setup_and_Building_of_Simulator/Computer_Setup","unlisted":false},{"type":"link","label":"Simulator Setup","href":"/BISIMEYER/docs/Setup_and_Building_of_Simulator/Simulator_Setup","docId":"Setup_and_Building_of_Simulator/Simulator_Setup","unlisted":false},{"type":"link","label":"Setup of Scenarios","href":"/BISIMEYER/docs/Setup_and_Building_of_Simulator/Setup_of_Scenarios","docId":"Setup_and_Building_of_Simulator/Setup_of_Scenarios","unlisted":false}],"href":"/BISIMEYER/docs/category/setup-and-building-of-simulator"},{"type":"category","label":"Calabration and Validation","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Calabration","href":"/BISIMEYER/docs/Calabration_and_Validation/Calabration","docId":"Calabration_and_Validation/Calabration","unlisted":false},{"type":"link","label":"Validation of Bicycle Simulator","href":"/BISIMEYER/docs/Calabration_and_Validation/Valadation","docId":"Calabration_and_Validation/Valadation","unlisted":false}],"href":"/BISIMEYER/docs/category/calabration-and-validation"},{"type":"category","label":"Research Methodology","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Ethics","href":"/BISIMEYER/docs/Reseach_Methodology/ethics","docId":"Reseach_Methodology/ethics","unlisted":false},{"type":"link","label":"Measured Inputs","href":"/BISIMEYER/docs/Reseach_Methodology/measured_inputs","docId":"Reseach_Methodology/measured_inputs","unlisted":false},{"type":"link","label":"Simulator Training","href":"/BISIMEYER/docs/Reseach_Methodology/Simulator_Training","docId":"Reseach_Methodology/Simulator_Training","unlisted":false}],"href":"/BISIMEYER/docs/category/research-methodology"}]},"docs":{"BISIMEYER Overview/Equipment-requirements":{"id":"BISIMEYER Overview/Equipment-requirements","title":"Equipment Requirements","description":"XXXXX","sidebar":"tutorialSidebar"},"BISIMEYER Overview/introduction":{"id":"BISIMEYER Overview/introduction","title":"Introduction","description":"Welcome to the BISIMeyer Standard, an open source standard for bicycle simulators. This standard is set out to help create a standard in bicycle simulators. As of now there is no set standard of how to build a bicycle simulator and each bicycle simulator that has been so far created has been different by using different software, equipment, and methodology. These simulators are also typically not well documented, leaving other researchers to wonder how the other created their simulator. It also creates a lot of duplication of work, as researchers have to start from the beginning each time researching how to create a bicycle simulator. This open standard hopes to address these issues by being open source, by having open documentation of how everything was done, by using open source software where possible, and by having reliable, replicable, and accurate methodologies, so that the research done with these bicycle simulators can be validated by anyone interested in the field of bicycles simulators.","sidebar":"tutorialSidebar"},"BISIMEYER Overview/small_electronics":{"id":"BISIMEYER Overview/small_electronics","title":"Small Electronics","description":"To help record actions from subjects, modification and small electronics need to be added to the simulator. As stated before these include braking, shifting, steering, but also include heart rate, and power output. Other features which increase realism is the addition of Wind using fans to simulate wind while riding.","sidebar":"tutorialSidebar"},"BISIMEYER Overview/Software":{"id":"BISIMEYER Overview/Software","title":"Software","description":"Software is the backbone of the bicycle simulator. Of course, basic simulators may not have any display or just record basic outputs, but with today technology we can create virtual environments and create virtual scenarios. There are two primary pieces of software which are used in virtualization and the creation of the virtual environment and that are Unity and Unreal Engine. Both have been used in many simulation projects. In this case we recommend Unreal Engine, as there has been some more development from other research groups to develop packages which are useful in developing a simulator and managing things like traffic. There are many versions of Unreal Engine, but we recommend and support the use of a branch of Unreal Engine Called CARLA. This branch was developed for Autonomous vehicle simulation, but can be easily adjusted for non-AV vehicle use. Unreal Engine is the backbone of the simulation software, but with the provide maps, could limit your research and scenarios. To be able to create a new scenario, it is required to use RoadRunner, which is unfortunately a product of Mathworks, but is a great fully fleshed out software, with a lot of capabilities and functions for creating custom maps. Other similar software fall short of the feature sets that RoadRunner does provide, like Truevision.","sidebar":"tutorialSidebar"},"Calabration_and_Validation/Calabration":{"id":"Calabration_and_Validation/Calabration","title":"Calabration","description":"","sidebar":"tutorialSidebar"},"Calabration_and_Validation/Valadation":{"id":"Calabration_and_Validation/Valadation","title":"Validation of Bicycle Simulator","description":"","sidebar":"tutorialSidebar"},"IntroductionBISIM":{"id":"IntroductionBISIM","title":"BISIMEYER Introduction","description":"Let\'s discover The BISIMEYER Standard.","sidebar":"tutorialSidebar"},"Reseach_Methodology/ethics":{"id":"Reseach_Methodology/ethics","title":"Ethics","description":"","sidebar":"tutorialSidebar"},"Reseach_Methodology/measured_inputs":{"id":"Reseach_Methodology/measured_inputs","title":"Measured Inputs","description":"","sidebar":"tutorialSidebar"},"Reseach_Methodology/Simulator_Training":{"id":"Reseach_Methodology/Simulator_Training","title":"Simulator Training","description":"","sidebar":"tutorialSidebar"},"Setup_and_Building_of_Simulator/Computer_Setup":{"id":"Setup_and_Building_of_Simulator/Computer_Setup","title":"Computer Setup","description":"Software is the backbone of the bicycle simulator. Of course, basic simulators may not have any display or just record basic outputs, but with today technology we can create virtual environments and create virtual scenarios. There are two primary pieces of software which are used in virtualization and the creation of the virtual environment and that are Unity and Unreal Engine. Both have been used in many simulation projects. In this case we recommend Unreal Engine, as there has been some more development from other research groups to develop packages which are useful in developing a simulator and managing things like traffic. There are many versions of Unreal Engine, but we recommend and support the use of a branch of Unreal Engine Called CARLA. This branch was developed for Autonomous vehicle simulation, but can be easily adjusted for non-AV vehicle use. Unreal Engine is the backbone of the simulation software, but with the provide maps, could limit your research and scenarios. To be able to create a new scenario, it is required to use RoadRunner, which is unfortunately a product of Mathworks, but is a great fully fleshed out software, with a lot of capabilities and functions for creating custom maps. Other similar software fall short of the feature sets that RoadRunner does provide, like Truevision.","sidebar":"tutorialSidebar"},"Setup_and_Building_of_Simulator/Setup_of_Scenarios":{"id":"Setup_and_Building_of_Simulator/Setup_of_Scenarios","title":"Setup of Scenarios","description":"In this chapter, we will talk about how to set up your own custom scenario of a real world location.","sidebar":"tutorialSidebar"},"Setup_and_Building_of_Simulator/Simulator_Setup":{"id":"Setup_and_Building_of_Simulator/Simulator_Setup","title":"Simulator Setup","description":"","sidebar":"tutorialSidebar"}}}}')}}]);